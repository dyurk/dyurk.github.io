<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DYURK]]></title>
  <link href="http://www.dyurk.com/atom.xml" rel="self"/>
  <link href="http://www.dyurk.com/"/>
  <updated>2015-07-12T18:01:15-04:00</updated>
  <id>http://www.dyurk.com/</id>
  <author>
    <name><![CDATA[DYURK]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[splogTASH - SPL to Lucene translator]]></title>
    <link href="http://www.dyurk.com/blog/2015/02/08/splogtash-a-simple-spl-search-processing-language-to-lucene-translator/"/>
    <updated>2015-02-08T12:59:41-05:00</updated>
    <id>http://www.dyurk.com/blog/2015/02/08/splogtash-a-simple-spl-search-processing-language-to-lucene-translator</id>
    <content type="html"><![CDATA[<p>Recently I took part in the migration of Splunk over to ELK (Elastic Search/Logstash/Kibana). One of the main road-blocks with this migration was the syntax changes that were introduce since the query language was different in the new system.</p>

<p>Splunk uses a proprietary language called &ldquo;search processing language&rdquo; or SPL for short. Kibana and the ELK stack make use of Apache Lucene. These two languages are not difficult by themselves, but converting queries over from SPL to Lucene is not always a trivial task.</p>

<p>I wanted to find an easy way of converting Splunk queries over to Lucene, so I started working on a translator.</p>

<h3>What is splogTASH?</h3>


<p><img src="https://raw.githubusercontent.com/dyurk/splogtash/master/public/splogstash_screenshot.png"></p>

<p>splogTASH is a <a href="http://www.sinatrarb.com/">Sinatra</a> application that translates queries depending on the definitions provided. The main definitions are stored in a JSON formatted file <a href="https://github.com/dyurk/splogTASH/blob/master/helpers/lucene.json"><code>/helpers/lucene.json</code></a>.</p>

<figure class='code'><figcaption><span>../helpers/lucene.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;lucene&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;/data/syslog/current/web/info.log&quot;</span><span class="p">:</span> <span class="s2">&quot;web_info_log AND&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;/data/syslog/current/web/access.log&quot;</span><span class="p">:</span> <span class="s2">&quot;web_access_log AND&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;/data/syslog/current/web/error.log&quot;</span><span class="p">:</span> <span class="s2">&quot;web_error_log AND&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;source=&quot;</span><span class="p">:</span> <span class="s2">&quot;type:&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;uri=&quot;</span><span class="p">:</span> <span class="s2">&quot;request_uri:&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;uri_path=&quot;</span><span class="p">:</span> <span class="s2">&quot;request_uri:&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;http_response=&quot;</span><span class="p">:</span> <span class="s2">&quot;reponse:&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;=&quot;</span><span class="p">:</span> <span class="s2">&quot;:&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;pre_lucene&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;| where eventcount &gt;&quot;</span><span class="p">:</span> <span class="s2">&quot;min_doc_count:&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;transaction &quot;</span><span class="p">:</span> <span class="s2">&quot; agg:terms field:&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;stats count by &quot;</span><span class="p">:</span> <span class="s2">&quot; agg:stats field:&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see there are two objects in the schema, <em>lucene</em> and <em>pre_lucene</em>. Since splogTASH takes the whole inputed query and tokenizes each matching term, I added <em>pre_lucene</em> to easily convert before tokenizations. This comes in handy when dealing with complex queries that do aggregations for example.</p>

<p>Under the <em>lucene</em> object we see an example for a web info log:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="s2">&quot;/data/syslog/current/web/info.log&quot;</span><span class="err">:</span> <span class="s2">&quot;web_info_log AND&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here we are saying that any time we match <strong>&ldquo;/data/syslog/current/web/info.log&rdquo;</strong>, we want <strong>&ldquo;web_info_log AND&rdquo;</strong> in return. It&rsquo;s as simple as that, to add your own definitions follow the patter of &ldquo;term&rdquo; : &ldquo;definition&rdquo;.</p>

<p>Lastly, I would like to point out the main splogtash.rb file (line 39-48):</p>

<figure class='code'><figcaption><span>../splogtash.rb</span><a href='https://github.com/dyurk/splogTASH/blob/master/splogtash.rb#L31-L50'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="c1"># post processing</span>
</span><span class='line'>    <span class="n">inputs</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">query</span><span class="o">|</span>
</span><span class='line'>      <span class="n">queries</span> <span class="o">&lt;&lt;</span> <span class="n">query</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">queries</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">q</span><span class="o">|</span>
</span><span class='line'>      <span class="n">temp_var</span> <span class="o">=</span> <span class="nb">String</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">temp_var</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>      <span class="n">lucene</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">u</span><span class="o">|</span> <span class="n">temp_var</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">u</span><span class="p">)}</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">temp_var</span>
</span><span class='line'>      <span class="k">when</span> <span class="sr">/AND/</span>
</span><span class='line'>           <span class="n">temp_var</span> <span class="o">=</span> <span class="n">temp_var</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">when</span> <span class="sr">/!/</span>
</span><span class='line'>           <span class="n">temp_var</span> <span class="o">=</span> <span class="n">temp_var</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s2">&quot;!&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;-&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">when</span> <span class="sr">/\//</span>
</span><span class='line'>           <span class="n">temp_var</span> <span class="o">=</span> <span class="n">temp_var</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="se">\\</span><span class="s2">\/&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">lucenyze</span> <span class="o">&lt;&lt;</span> <span class="n">temp_var</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">rtg</span> <span class="o">&lt;&lt;</span> <span class="n">lucenyze</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">rtg</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the post-processing section there is a case statement which handles global translations. In this example I&rsquo;m cleaning the query by escaping &ldquo;/&rdquo; and also replacing &ldquo;!&rdquo; with &ldquo;&ndash;&rdquo; (exclusions).</p>

<p>After a query has been converted we can then click on the translated query to test on Kibana. You might be interested in customizing the URL to best fit you. Look at <code>../views/search.erb</code>, replace &ldquo;kibana.initech.com&rdquo;.</p>

<figure class='code'><figcaption><span>../views/search.erb</span><a href='https://github.com/dyurk/splogTASH/blob/master/views/search.erb#L9'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;panel panel-success&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;panel-body&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;pre&gt;</span> <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;https://kibana.initech.com/#/dashboard/file/logstash.json?from=5m&amp;query=&lt;%= h @escaped_input %&gt;&quot;</span><span class="nt">&gt;</span><span class="err">&lt;</span>%= @input %&gt;<span class="nt">&lt;/a&gt;&lt;/pre&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Try it yourself!</h3>


<p>It&rsquo;s real simple to get started. The source can be found on my GitHub page: <a href="https://github.com/dyurk/splogTASH">https://github.com/dyurk/splogTASH</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone git@github.com:dyurk/splogTASH.git
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>splogTASH/ <span class="o">&amp;&amp;</span> rackup -p 8080
</span></code></pre></td></tr></table></div></figure>


<p>Now go to <a href="http://localhost:8080">http://localhost:8080</a></p>

<p><em>Patches welcome!! </em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating from WordPress to Octopress]]></title>
    <link href="http://www.dyurk.com/blog/2013/12/24/migrating-from-wordpress-to-octopress/"/>
    <updated>2013-12-24T22:45:54-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/12/24/migrating-from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>For some time I have looked at moving away from Wordpress for numerous reasons (That would be for another post!). I took a look at various platforms, but most fell short of expectations. Either they were too bloated, troublesome to manage or they lack some core features. I played around with <a href="http://jekyllrb.com/">Jekyll</a> and I liked the initial idea. But, after doing more research I found <a href="http://octopress.org/">Octopress</a> and I was quite happy with the final result.</p>

<p>Since you can host your blog from GitHub pages, my original plan was to first get a working copy running. After everything looked well, I would point my domain name to GitHub. This is how I did it&hellip;</p>

<h3>First Step: Get all data out of Wordpress</h3>


<p>This step was easy, just log-on to Wordpress&#8217; admin page and initiate an <a href="http://en.blog.wordpress.com/2006/06/12/xml-import-export/">XML export</a>. This is optional, but for the database export I decided that it would be easier to just do a MySQL dump and then do an import on my local MySQL instance.</p>

<p>All of the static files will need to be moved. If you are hosting them somewhere else you will only have to worry about the <strong>wp-content</strong> folder. This folder contains all of your plug-ins, themes, and images. In reality all we need is the images, in my case I deleted the rest except the images which were under the <em>uploads</em> folder.</p>

<h3>Install Octopress</h3>


<p>Again, this step is easy and very well <a href="http://octopress.org/docs/setup/">documented</a>. If you are hosting on GitHub you will need to create a new repository that follows the correct naming convention.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>github_username.github.io</span></code></pre></td></tr></table></div></figure>


<p>For example, my repo is <strong>dyurk.github.io</strong>.</p>

<h3>Importing your data to Octopress</h3>


<p>You will need to install the jekyll-import gem:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install jekyll-import
</span></code></pre></td></tr></table></div></figure>


<p>In the directory where you have your <code>wordpress.xml</code> file run the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -rubygems -e <span class="s1">&#39;require &quot;jekyll-import&quot;;</span>
</span><span class='line'><span class="s1">    JekyllImport::Importers::WordPress.run({</span>
</span><span class='line'><span class="s1">      &quot;dbname&quot;   =&gt; &quot;wordpress_db&quot;,</span>
</span><span class='line'><span class="s1">      &quot;user&quot;     =&gt; &quot;user&quot;,</span>
</span><span class='line'><span class="s1">      &quot;password&quot; =&gt; &quot;pass&quot;,</span>
</span><span class='line'><span class="s1">      &quot;host&quot;     =&gt; &quot;localhost&quot;,</span>
</span><span class='line'><span class="s1">      &quot;prefix&quot;   =&gt; &quot;wp_&quot;,</span>
</span><span class='line'><span class="s1">      &quot;clean_entities&quot; =&gt; true,</span>
</span><span class='line'><span class="s1">      &quot;comments&quot;       =&gt; true,</span>
</span><span class='line'><span class="s1">      &quot;categories&quot;     =&gt; true,</span>
</span><span class='line'><span class="s1">      &quot;tags&quot;           =&gt; true,</span>
</span><span class='line'><span class="s1">      &quot;more_excerpt&quot;   =&gt; true,</span>
</span><span class='line'><span class="s1">      &quot;more_anchor&quot;    =&gt; true,</span>
</span><span class='line'><span class="s1">      &quot;status&quot;         =&gt; [&quot;publish&quot;]</span>
</span><span class='line'><span class="s1">    })&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will create a <strong>_post</strong> directory. Which will need to be move to <strong>octopress/source/</strong>.</p>

<p>Keep in mind that any <code>&lt;code&gt;</code> tags will need to be replace by backticks. Any snippets or tags specific to Wordpress will most likely break formatting.</p>

<p>Finally, for the static content in the <strong>wp-content</strong> folder, I decided to move the entire directory under <strong>octopress/source/</strong>. That way I don&rsquo;t have to update the code and SEO does not take a hit.</p>

<h3>Custom domain and 404s</h3>


<p>If you own a domain that you would like to use for your GitHub hosted blog. Basically, all you need is an A record pointing to <em>204.232.175.78</em> and a file under <strong>octopress/source/</strong> name <code>CNAME</code>. In this file add your domain name like so:</p>

<figure class='code'><figcaption><span>&#8230;/octopress/source/CNAME</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">www.dyurk.com</span>
</span></code></pre></td></tr></table></div></figure>


<p>To gracefully handle 404s I decided to redirect to the homepage. To add a custom 404 page just create a file under the <strong>source/</strong> directory. The file must be named <code>404.html</code>. Here is my file:</p>

<figure class='code'><figcaption><span>&#8230;/octopress/source/404.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>        <span class="nt">&lt;head&gt;</span>
</span><span class='line'>        <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;refresh&quot;</span> <span class="na">content=</span><span class="s">&quot;0; url=http://dyurk.com/&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Conclusion</h3>


<p>After the DNS changes take effect the blog should be accessible via the domain name. If you are looking to customize your blog I recommend reading Octopress&#8217; documentation on the topic: <a href="http://octopress.org/docs/theme/.">http://octopress.org/docs/theme/.</a></p>

<p>As a side note, if you need to moved your working copy to a new computer or just need to re-create it, you will need to do the following:</p>

<p>Clone the <em>source</em> branch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone -b <span class="nb">source </span>git@github.com:username/username.github.io.git octopress
</span></code></pre></td></tr></table></div></figure>


<p>Bundle install and setup GitHub pages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>sudo gem install bundler
</span><span class='line'><span class="nv">$ </span>rbenv rehash <span class="o">&amp;&amp;</span> bundle install <span class="o">&amp;&amp;</span> rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>Now fetch the master branch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>_deploy
</span><span class='line'><span class="nv">$ </span>git fetch —all
</span><span class='line'><span class="nv">$ </span>git reset --hard origin/master
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Confluence XML Import Issues]]></title>
    <link href="http://www.dyurk.com/blog/2013/03/26/confluence-xml-import-issues/"/>
    <updated>2013-03-26T13:35:01-04:00</updated>
    <id>http://www.dyurk.com/blog/2013/03/26/confluence-xml-import-issues</id>
    <content type="html"><![CDATA[<p>Find the class that the import is having issues with. For this example ContentPermission is the problem.</p>

<pre class="prettyprint">Error while importing backup: not-null property references a null or transient value: com.atlassian.confluence.security.ContentPermission.owningSet
Caused by: net.sf.hibernate.PropertyValueException: not-null property references a null or transient value: com.atlassian.confluence.security.ContentPermission.owningSet</pre>


<p>Delete all ContentPermission entries from the XML file &ndash; this will remove all unnecessary/unsupported classes and will allow the import to continue. Open the zip file and edit entities.xml</p>

<br>


<p>Search for <code>&lt;object class="ContentPermission"...&gt;</code> You will see <code>&lt;object&gt;</code> entries like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;object</span> <span class="na">class=</span><span class="s">&quot;ContentPermission&quot;</span> <span class="na">package=</span><span class="s">&quot;com.atlassian.confluence.security&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;id</span> <span class="na">name=</span><span class="s">&quot;id&quot;</span><span class="nt">&gt;</span>17072133<span class="nt">&lt;/id&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;type&quot;</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[View]]&gt;</span><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;userName&quot;</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[corporatetrainer]]&gt;</span><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;groupName&quot;</span><span class="nt">/&gt;&lt;property</span> <span class="na">name=</span><span class="s">&quot;owningSet&quot;</span> <span class="na">class=</span><span class="s">&quot;ContentPermissionSet&quot;</span> <span class="na">package=</span><span class="s">&quot;com.atlassian.confluence.security&quot;</span><span class="nt">&gt;&lt;id</span> <span class="na">name=</span><span class="s">&quot;id&quot;</span><span class="nt">&gt;</span>17039363<span class="nt">&lt;/id&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;creatorName&quot;</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[corporatetrainer]]&gt;</span><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;creationDate&quot;</span><span class="nt">&gt;</span>2011-05-19 10:22:05.000<span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;lastModifierName&quot;</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[corporatetrainer]]&gt;</span><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;lastModificationDate&quot;</span><span class="nt">&gt;</span>2011-05-19 10:22:05.000<span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/object&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Helpful on-liner to remove the entries from entities.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sed -i <span class="s1">&#39;/&lt;object class=&quot;ContentPermission&quot;/,/&lt;\/object&gt;/d&#39;</span> entities.xml
</span></code></pre></td></tr></table></div></figure>


<p>Make sure there are no syntax errors that will cause the import to fail</p>

<pre>xmllint --noout entities.xml</pre>


<p>Retry the import and Good Luck!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Proxy Example]]></title>
    <link href="http://www.dyurk.com/blog/2013/03/12/apache-proxy-example/"/>
    <updated>2013-03-12T16:58:56-04:00</updated>
    <id>http://www.dyurk.com/blog/2013/03/12/apache-proxy-example</id>
    <content type="html"><![CDATA[<p>Apache proxy example for web app running on myapp.website.com on port 7990.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='apacheconf'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nb">ServerName</span> myapp.website.com
</span><span class='line'>        <span class="nb">ProxyRequests</span> <span class="k">Off</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;Proxy</span> <span class="s">*</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nb">Order</span> deny,allow
</span><span class='line'>                <span class="nb">Allow</span> from <span class="k">all</span>
</span><span class='line'>        <span class="nt">&lt;/Proxy&gt;</span>
</span><span class='line'>
</span><span class='line'>                <span class="c"># Logging</span>
</span><span class='line'>        <span class="nb">LogFormat</span> <span class="s2">&quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b&quot;</span> common
</span><span class='line'>        <span class="nb">CustomLog</span> logs/access_log common
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="nb">ProxyTimeout</span>    <span class="m">7200</span>
</span><span class='line'>        <span class="nb">ProxyPreserveHost</span> <span class="k">On</span>
</span><span class='line'>        <span class="nb">ProxyPass</span>           /       http://localhost:7990/
</span><span class='line'>        <span class="nb">ProxyPassReverse</span>    /       http://localhost:7990/
</span><span class='line'>        <span class="nb">ProxyTimeout</span>     <span class="m">86400</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cisco Catalyst 2960 - Notes]]></title>
    <link href="http://www.dyurk.com/blog/2013/03/06/cisco-catalyst-2960-notes/"/>
    <updated>2013-03-06T03:07:46-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/03/06/cisco-catalyst-2960-notes</id>
    <content type="html"><![CDATA[<h2>VLAN</h2>


<h3>Creating VLANs</h3>


<p>Show all VLANs on switch</p>

<pre>&gt; sh vlan</pre>


<p>Now, Let&rsquo;s begin. Enter global configuration mode</p>

<pre># config t</pre>


<p>Enter a VLAN ID</p>

<pre># vlan 5</pre>


<p>Provide a name for the VLAN</p>

<pre># name myvlan</pre>


<p>Exit config</p>

<pre># end</pre>


<h3>Assigning Ports to a VLAN</h3>


<p>Enter global configuration mode</p>

<pre># config t</pre>


<p>Select the interface (port). Naming convention: Switch# / Port</p>

<p>e.g Switch 1 port 19</p>

<pre># interface Gi1/0/19</pre>


<p>Define the VLAN membership mode for the port (Layer 2 access port).</p>

<pre># switchport mode access</pre>


<p>Assign the port to a VLAN</p>

<pre># switchport access vlan 5</pre>


<p>Exit config</p>

<pre># end</pre>


<h2><a id="more"></a><a id="more-694"></a></h2>


<h2>Back up and Restore Configuration Files</h2>


<h3>TFTP Back up</h3>


<p>To back up the current configuration, enter Privilege Mode then type the following:</p>

<pre>#copy running-config tftp:</pre>


<p>You will then be prompt to provided the address of the tftp server &amp; the filename. Here is an example:</p>

<pre>Address or name of remote host []? 102.10.15.44
 Destination filename [mco-confg]? name_of_config_file
 !!
 1030 bytes copied in 2.489 secs (395 bytes/sec)</pre>


<h3>TFTP Restore</h3>


<p>To restore a configuration from a tftp server, first enter Privilege Mode then type the following:</p>

<pre>#copy tftp: running-config</pre>


<p>You will then be prompt to provided the address of the tftp server &amp; the filename. Here is an example:</p>

<pre>Address or name of remote host []? 102.10.15.44
 Source filename []? backup_cfg_for_my_router
 Destination filename [running-config]?
 Accessing tftp://102.10.15.1/backup_cfg_for_my_router...
 Loading backup_cfg_for_router from 102.10.15.44 (via FastEthernet0/0): !
 [OK - 1030 bytes]</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ERROR 2006 (HY000) MySQL server has gone away]]></title>
    <link href="http://www.dyurk.com/blog/2013/02/20/error-2006-hy000-mysql-server-has-gone-away/"/>
    <updated>2013-02-20T22:08:22-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/02/20/error-2006-hy000-mysql-server-has-gone-away</id>
    <content type="html"><![CDATA[<p>The server&rsquo;s default <a href="http://dev.mysql.com/doc/refman/5.5/en//server-system-variables.html#sysvar_max_allowed_packet"><code>max_allowed_packet</code></a> value is 1MB and it looks like it has exceeded the default max. You can increase this if the server needs to handle big queries. This can be done in two ways:</p>

<p>Start MySQL client with the following option (64 MB for this example)</p>

<pre><code>mysql --max_allowed_packet=64M </code></pre>


<p>or Add the following in your my.cnf file</p>

<pre><code>max_allowed_packet=64M</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Temporarily Disable Puppet]]></title>
    <link href="http://www.dyurk.com/blog/2013/02/20/temporarily-disable-puppet/"/>
    <updated>2013-02-20T21:26:26-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/02/20/temporarily-disable-puppet</id>
    <content type="html"><![CDATA[<p>This is can be done by an admin disabled of Puppet</p>

<pre># puppet agent --disable "Reason why disabled"</pre>


<p>To make sure it&rsquo;s disable, just do a Puppet run;</p>

<pre># puppet agent -t
 Notice: Skipping run of Puppet configuration client; administratively disabled (Reason: 'Testing some new things');
 Use 'puppet agent --enable' to re-enable.</pre>


<p>To enable:</p>

<pre>puppet agent --enable</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Confluence backup errors]]></title>
    <link href="http://www.dyurk.com/blog/2013/02/20/confluence-backup-errors/"/>
    <updated>2013-02-20T15:17:32-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/02/20/confluence-backup-errors</id>
    <content type="html"><![CDATA[<pre>The following error(s) occurred:
com.atlassian.confluence.importexport.ImportExportException: Couldn't backup database data. at com.atlassian.confluence.importexport.impl.AbstractXmlExporter.backupEntities(AbstractXmlExporter.java:197) at com.atlassian.confluence.importexport.impl.AbstractXmlExporter.backupEverything(AbstractXmlExporter.java:99) at com.atlassian.confluence.importexport.impl.FileXmlExporter.backupEverything(FileXmlExporter.java:76)</pre>


<p>Java is running out of memory.</p>

<p>To increase heap or perm gen space memory in Linux installations,</p>

<p>Edit $CONFLUENCE_HOME/bin/setenv.sh</p>

<p>Find the section <code>JAVA_OPTS="-Xms256m -Xmx512m -XX:MaxPermSize=256m</code> and set accordingly.  Xmx is maximum, Xms is minimum, and MaxPermSize is PermGen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git 1.8.x on CentOS]]></title>
    <link href="http://www.dyurk.com/blog/2013/02/08/git-1-8-x-on-centos/"/>
    <updated>2013-02-08T17:16:13-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/02/08/git-1-8-x-on-centos</id>
    <content type="html"><![CDATA[<p>At the moment this is not on EPEL &amp; CentOS repo, you&rsquo;ll have to compile from source.</p>

<p>Get the desired version: <a href="http://code.google.com/p/git-core/downloads/list"><a href="http://code.google.com/p/git-core/downloads/list">http://code.google.com/p/git-core/downloads/list</a></a></p>

<pre>tar -xzvf ./git-1.8.x.tar.gz</pre>


<pre>cd ./git-1.8.x</pre>


<pre id="crayon-51152fba206b0-5">./configure</pre>


<pre id="crayon-51152fba206b0-6">make &amp;&amp; make install</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring memcached ]]></title>
    <link href="http://www.dyurk.com/blog/2013/01/11/configuring-memcached/"/>
    <updated>2013-01-11T16:45:26-05:00</updated>
    <id>http://www.dyurk.com/blog/2013/01/11/configuring-memcached</id>
    <content type="html"><![CDATA[<h3>What is memcached?</h3>


<p>memcached is a high-performance, distributed memory object caching system, generic in nature, but originally intended for use in speeding up dynamic web applications by alleviating database load.</p>

<h3>Configuring memcached</h3>


<p>Edit</p>

<pre>/etc/sysconfig/memcached</pre>


<p>Sample configuration. Cache size is important, it determines the amount of ram in megabytes that are allocated to memcached pool.</p>

<pre>PORT="11211"
USER="memcached"
MAXCONN="1024"
CACHESIZE="12288"
OPTIONS=""</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN cat error: "File not found". Gives wrong revision]]></title>
    <link href="http://www.dyurk.com/blog/2012/12/06/svn-cat-error-file-not-found-gives-wrong-revision/"/>
    <updated>2012-12-06T02:47:02-05:00</updated>
    <id>http://www.dyurk.com/blog/2012/12/06/svn-cat-error-file-not-found-gives-wrong-revision</id>
    <content type="html"><![CDATA[<p>You will need to use the peg revision</p>

<p>svn <em><code>command</code></em> -r <em><code>OPERATIVE-REV</code></em> item@<em><code>PEG-REV</code></em></p>

<p><a href="http://svnbook.red-bean.com/en/1.2/svn.advanced.pegrevs.html">http://svnbook.red-bean.com/en/1.2/svn.advanced.pegrevs.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JIRA v5 SVN commit tab error]]></title>
    <link href="http://www.dyurk.com/blog/2012/11/19/jira-v5-svn-commit-tab-error-com-atlassian-jira-plugin-ext-subversionsubversion-commits-tabpanel/"/>
    <updated>2012-11-19T18:09:49-05:00</updated>
    <id>http://www.dyurk.com/blog/2012/11/19/jira-v5-svn-commit-tab-error-com-atlassian-jira-plugin-ext-subversionsubversion-commits-tabpanel</id>
    <content type="html"><![CDATA[<pre>JIRA v5 SVN commit tab error. com.atlassian.jira.plugin.ext.subversion:subversion-commits-tabpanel</pre>


<p>To fix this issue you will need to remove the <strong>atlassian-subversion-revisions </strong>folder which is located under the home directory of the JIRA user.</p>

<pre>$JIRA_HOME/caches/indexes/plugins/atlassian-subversion-revisions/</pre>


<p>Now restart JIRA, the subversion tab should now start displaying commits.</p>

<p>&nbsp;</p>

<h6>source: <a href="https://confluence.atlassian.com/display/JIRAKB/How+to+resolve+JIRA+Sub+Version+Plugin+Errors+after+an+upgrade">https://confluence.atlassian.com/display/JIRAKB/How+to+resolve+JIRA+Sub+Version+Plugin+Errors+after+an+upgrade</a></h6>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flush Memcached ]]></title>
    <link href="http://www.dyurk.com/blog/2012/10/17/flush-memcached/"/>
    <updated>2012-10-17T22:50:28-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/10/17/flush-memcached</id>
    <content type="html"><![CDATA[<pre>echo 'flush_all' | nc localhost 11211</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restored a cleared git stash]]></title>
    <link href="http://www.dyurk.com/blog/2012/10/05/restored-a-cleared-git-stash/"/>
    <updated>2012-10-05T14:33:35-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/10/05/restored-a-cleared-git-stash</id>
    <content type="html"><![CDATA[<p>Run the following:</p>

<pre>git fsck --lost-found</pre>


<p>You will get something similar to this:</p>

<pre>Checking objects: 100% (6596/6596), done.
dangling commit e3b3b973asdasdasdasdasd7cqweqwe35f6d34e</pre>


<p>Now just apply the stash&rsquo;s SHA1:</p>

<pre>git stash apply e3b3b973asdasdasdasdasd7cqweqwe35f6d34e</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[su apache: "This account is currently not available"]]></title>
    <link href="http://www.dyurk.com/blog/2012/09/11/this-account-is-currently-not-available/"/>
    <updated>2012-09-11T16:04:27-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/09/11/this-account-is-currently-not-available</id>
    <content type="html"><![CDATA[<p>When trying to switch user to apache and you get the following: &#8221;This account is currently not available&#8221;. You need to set a shell for the apache user. Let&rsquo;s say we want to use bash.</p>

<pre># chsh -s /bin/bash apache

</pre>


<p>You should get this prompt:</p>

<pre>Changing shell for apache.
Shell changed.</pre>


<p>Done! Now you should be able to su as apache.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN Backup & Migration ]]></title>
    <link href="http://www.dyurk.com/blog/2012/08/23/svn-backup-migration/"/>
    <updated>2012-08-23T16:00:34-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/08/23/svn-backup-migration</id>
    <content type="html"><![CDATA[<h2>Backing Up</h2>


<p>Backing up the D87 repo:</p>

<pre># svnadmin dump /var/svn/repos/D87 &gt; D87_repo.svndump</pre>


<h2>Migrating a Repository</h2>


<p>First back up the Repo (See steps above). Now create the repo in the new location.</p>

<p>e.g. D87 repo:</p>

<pre># svnadmin create /var/svn/repos/D87</pre>


<p>Load the dump file created during the backup process</p>

<pre># svnadmin load /var/svn/repos/D87 &lt; D87_repo.svndump</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM: Find & Replace]]></title>
    <link href="http://www.dyurk.com/blog/2012/08/15/vim-find-replace/"/>
    <updated>2012-08-15T20:16:02-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/08/15/vim-find-replace</id>
    <content type="html"><![CDATA[<p>Find &ldquo;foo&rdquo; and replace with &ldquo;hello&rdquo;</p>

<pre>:%s/foo/hello/g</pre>


<p>&nbsp;</p>

<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Examples of lftp]]></title>
    <link href="http://www.dyurk.com/blog/2012/08/09/examples-of-lftp/"/>
    <updated>2012-08-09T13:14:25-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/08/09/examples-of-lftp</id>
    <content type="html"><![CDATA[<p>In this example we are changing directory to &ldquo;output&rdquo; and doing a listing of files:</p>

<pre> lftp -e 'set net:timeout 10;cd output/;ls; bye' -u USER,PASSWORD ftp.foo.com/</pre>


<p>Here we are going to &ldquo;output&rdquo; and we transferring &#8221;myfile.txt&#8221; to our local /tmp directory.</p>

<pre>lftp -e 'set net:timeout 10;cd output/;get myfile.txt -o /tmp/; bye' -u USER,PASSWORD ftp.foo.com/</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet: Adding a Package ]]></title>
    <link href="http://www.dyurk.com/blog/2012/08/09/puppet-adding-a-package/"/>
    <updated>2012-08-09T13:04:08-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/08/09/puppet-adding-a-package</id>
    <content type="html"><![CDATA[<p>For this example lets ensure we have lftp install.</p>

<pre>package { "lftp":
        ensure =&gt; "latest"
}</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Concatenate CAT]]></title>
    <link href="http://www.dyurk.com/blog/2012/07/30/piping-cat-into-cat/"/>
    <updated>2012-07-30T15:30:07-04:00</updated>
    <id>http://www.dyurk.com/blog/2012/07/30/piping-cat-into-cat</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s say we have two files, <em>A.txt</em> &amp; <em>B.txt</em>. To show the output of these two files at once you will need to pipe cat using a &ldquo;&ndash;&rdquo;.</p>

<pre>cat a.txt | cat - b.txt</pre>


<p>&nbsp;</p>
]]></content>
  </entry>
  
</feed>
