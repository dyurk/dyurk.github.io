<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://dyurk.github.io/atom.xml" rel="self"/>
  <link href="http://dyurk.github.io/"/>
  <updated>2013-12-21T16:49:44-05:00</updated>
  <id>http://dyurk.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Confluence XML Import Issues]]></title>
    <link href="http://dyurk.github.io/blog/2013/03/26/confluence-xml-import-issues/"/>
    <updated>2013-03-26T13:35:01-04:00</updated>
    <id>http://dyurk.github.io/blog/2013/03/26/confluence-xml-import-issues</id>
    <content type="html"><![CDATA[<p>Find the class that the import is having issues with. For this example ContentPermission is the problem.</p>

<pre class="prettyprint">Error while importing backup: not-null property references a null or transient value: com.atlassian.confluence.security.ContentPermission.owningSet
Caused by: net.sf.hibernate.PropertyValueException: not-null property references a null or transient value: com.atlassian.confluence.security.ContentPermission.owningSet
</pre>


<p>Delete all ContentPermission entries from the XML file &ndash; this will remove all unnecessary/unsupported classes and will allow the import to continue. Open the zip file and edit entities.xml</p>

<br>


<p>Search for <code><object class="ContentPermission"...>.</code> You will see <code><object></code> entries like this:</p>

<pre class="prettyprint">

237081 <object class="ContentPermission" package="com.atlassian.confluence.security">
237082 <id name="id">17072133</id>
237083 <property name="type">&lt;![CDATA[View]]&gt;</property>
237084 <property name="userName">&lt;![CDATA[corporatetrainer]]&gt;</property>
237085 <property name="groupName"/><property name="owningSet" class="ContentPermissionSet" package="com.atlassian.confluence.security"><id name="id">17039363</id>
237086 </property>
237087 <property name="creatorName">&lt;![CDATA[corporatetrainer]]&gt;</property>
237088 <property name="creationDate">2011-05-19 10:22:05.000</property>
237089 <property name="lastModifierName">&lt;![CDATA[corporatetrainer]]&gt;</property>
237090 <property name="lastModificationDate">2011-05-19 10:22:05.000</property>
237091 </object>

</pre>


<p>Helpful on-liner to remove the entries from entities.xml</p>

<pre><code>sed -i '/<object class="ContentPermission"/,/<\/object>/d' entities.xml</code></pre>


<p>Make sure there are no syntax errors that will cause the import to fail</p>

<pre><code>xmllint --noout entities.xml</code></pre>


<p>Retry the import and Good Luck!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redirect All HTTP Request to HTTPS]]></title>
    <link href="http://dyurk.github.io/blog/2013/03/13/redirect-all-http-request-to-https/"/>
    <updated>2013-03-13T13:57:54-04:00</updated>
    <id>http://dyurk.github.io/blog/2013/03/13/redirect-all-http-request-to-https</id>
    <content type="html"><![CDATA[<pre class="prettyprint">
<VirtualHost *:80>
       ServerAlias *
       RewriteEngine On
       RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [redirect=301]
</VirtualHost>
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Proxy Example]]></title>
    <link href="http://dyurk.github.io/blog/2013/03/12/apache-proxy-example/"/>
    <updated>2013-03-12T16:58:56-04:00</updated>
    <id>http://dyurk.github.io/blog/2013/03/12/apache-proxy-example</id>
    <content type="html"><![CDATA[<p>Apache proxy example for web app running on myapp.website.com on port 7990.</p>

<pre class="prettyprint">
<VirtualHost *:80>
        ServerName myapp.website.com
        ProxyRequests Off

        <Proxy *>
                Order deny,allow
                Allow from all
        </Proxy>

                # Logging
        LogFormat "%h %l %u %t \"%r\" %>s %b" common
        CustomLog logs/access_log common


        ProxyTimeout    7200
        ProxyPreserveHost On
        ProxyPass           /       http://localhost:7990/
        ProxyPassReverse    /       http://localhost:7990/
        ProxyTimeout     86400

</VirtualHost>

</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cisco Catalyst 2960 - Notes]]></title>
    <link href="http://dyurk.github.io/blog/2013/03/06/cisco-catalyst-2960-notes/"/>
    <updated>2013-03-06T03:07:46-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/03/06/cisco-catalyst-2960-notes</id>
    <content type="html"><![CDATA[<h2>VLAN</h2>


<h3>Creating VLANs</h3>


<p>Show all VLANs on switch</p>

<pre>&gt; sh vlan</pre>


<p>Now, Let&rsquo;s begin. Enter global configuration mode</p>

<pre># config t</pre>


<p>Enter a VLAN ID</p>

<pre># vlan 5</pre>


<p>Provide a name for the VLAN</p>

<pre># name myvlan</pre>


<p>Exit config</p>

<pre># end</pre>


<h3>Assigning Ports to a VLAN</h3>


<p>Enter global configuration mode</p>

<pre># config t</pre>


<p>Select the interface (port). Naming convention: Switch# / Port</p>

<p>e.g Switch 1 port 19</p>

<pre># interface Gi1/0/19</pre>


<p>Define the VLAN membership mode for the port (Layer 2 access port).</p>

<pre># switchport mode access</pre>


<p>Assign the port to a VLAN</p>

<pre># switchport access vlan 5</pre>


<p>Exit config</p>

<pre># end</pre>


<h2><a id="more"></a><a id="more-694"></a></h2>


<h2>Back up and Restore Configuration Files</h2>


<h3>TFTP Back up</h3>


<p>To back up the current configuration, enter Privilege Mode then type the following:</p>

<pre>#copy running-config tftp:</pre>


<p>You will then be prompt to provided the address of the tftp server &amp; the filename. Here is an example:</p>

<pre>Address or name of remote host []? 102.10.15.44
 Destination filename [mco-confg]? name_of_config_file
 !!
 1030 bytes copied in 2.489 secs (395 bytes/sec)</pre>


<h3>TFTP Restore</h3>


<p>To restore a configuration from a tftp server, first enter Privilege Mode then type the following:</p>

<pre>#copy tftp: running-config</pre>


<p>You will then be prompt to provided the address of the tftp server &amp; the filename. Here is an example:</p>

<pre>Address or name of remote host []? 102.10.15.44
 Source filename []? backup_cfg_for_my_router
 Destination filename [running-config]?
 Accessing tftp://102.10.15.1/backup_cfg_for_my_router...
 Loading backup_cfg_for_router from 102.10.15.44 (via FastEthernet0/0): !
 [OK - 1030 bytes]</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ERROR 2006 (HY000) MySQL Server Has Gone Away]]></title>
    <link href="http://dyurk.github.io/blog/2013/02/20/error-2006-hy000-mysql-server-has-gone-away/"/>
    <updated>2013-02-20T22:08:22-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/02/20/error-2006-hy000-mysql-server-has-gone-away</id>
    <content type="html"><![CDATA[<p>The server&rsquo;s default <a href="http://dev.mysql.com/doc/refman/5.5/en//server-system-variables.html#sysvar_max_allowed_packet"><code>max_allowed_packet</code></a> value is 1MB and it looks like it has exceeded the default max. You can increase this if the server needs to handle big queries. This can be done in two ways:</p>

<p>Start MySQL client with the following option (64 MB for this example)</p>

<pre><code>mysql --max_allowed_packet=64M </code></pre>


<p>or Add the following in your my.cnf file</p>

<pre><code>max_allowed_packet=64M</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Temporarily Disable Puppet]]></title>
    <link href="http://dyurk.github.io/blog/2013/02/20/temporarily-disable-puppet/"/>
    <updated>2013-02-20T21:26:26-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/02/20/temporarily-disable-puppet</id>
    <content type="html"><![CDATA[<p>This is can be done by an admin disabled of Puppet</p>

<pre># puppet agent --disable "Reason why disabled"</pre>


<p>To make sure it&rsquo;s disable, just do a Puppet run;</p>

<pre># puppet agent -t
 Notice: Skipping run of Puppet configuration client; administratively disabled (Reason: 'Testing some new things');
 Use 'puppet agent --enable' to re-enable.</pre>


<p>To enable:</p>

<pre>puppet agent --enable</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Confluence Backup Errors]]></title>
    <link href="http://dyurk.github.io/blog/2013/02/20/confluence-backup-errors/"/>
    <updated>2013-02-20T15:17:32-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/02/20/confluence-backup-errors</id>
    <content type="html"><![CDATA[<pre>The following error(s) occurred:
com.atlassian.confluence.importexport.ImportExportException: Couldn't backup database data. at com.atlassian.confluence.importexport.impl.AbstractXmlExporter.backupEntities(AbstractXmlExporter.java:197) at com.atlassian.confluence.importexport.impl.AbstractXmlExporter.backupEverything(AbstractXmlExporter.java:99) at com.atlassian.confluence.importexport.impl.FileXmlExporter.backupEverything(FileXmlExporter.java:76)</pre>


<p>Java is running out of memory.</p>

<p>To increase heap or perm gen space memory in Linux installations,</p>

<p>Edit $CONFLUENCE_HOME/bin/setenv.sh</p>

<p>Find the section JAVA_OPTS=&ldquo;-Xms256m -Xmx512m -XX:MaxPermSize=256m and set accordingly.  Xmx is maximum, Xms is minimum, and MaxPermSize is PermGen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Photos]]></title>
    <link href="http://dyurk.github.io/blog/2013/02/17/photos/"/>
    <updated>2013-02-17T17:09:10-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/02/17/photos</id>
    <content type="html"><![CDATA[<p>[flickrps]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[632]]></title>
    <link href="http://dyurk.github.io/blog/2013/02/17/632/"/>
    <updated>2013-02-17T17:09:10-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/02/17/632</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 1.8.x on CentOS]]></title>
    <link href="http://dyurk.github.io/blog/2013/02/08/git-1-8-x-on-centos/"/>
    <updated>2013-02-08T17:16:13-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/02/08/git-1-8-x-on-centos</id>
    <content type="html"><![CDATA[<p>At the moment this is not on EPEL &amp; CentOS repo, you&rsquo;ll have to compile from source.</p>

<p>Get the desired version: <a href="http://code.google.com/p/git-core/downloads/list"><a href="http://code.google.com/p/git-core/downloads/list">http://code.google.com/p/git-core/downloads/list</a></a></p>

<pre>tar -xzvf ./git-1.8.x.tar.gz</pre>


<pre>cd ./git-1.8.x</pre>


<pre id="crayon-51152fba206b0-5">./configure</pre>


<pre id="crayon-51152fba206b0-6">make &amp;&amp; make install</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSS]]></title>
    <link href="http://dyurk.github.io/blog/2013/01/16/rss-2/"/>
    <updated>2013-01-16T02:29:06-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/01/16/rss-2</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring Memcached]]></title>
    <link href="http://dyurk.github.io/blog/2013/01/11/configuring-memcached/"/>
    <updated>2013-01-11T16:45:26-05:00</updated>
    <id>http://dyurk.github.io/blog/2013/01/11/configuring-memcached</id>
    <content type="html"><![CDATA[<h3>What is memcached?</h3>


<p>memcached is a high-performance, distributed memory object caching system, generic in nature, but originally intended for use in speeding up dynamic web applications by alleviating database load.</p>

<h3>Configuring memcached</h3>


<p>Edit</p>

<pre>/etc/sysconfig/memcached</pre>


<p>Sample configuration. Cache size is important, it determines the amount of ram in megabytes that are allocated to memcached pool.</p>

<pre>PORT="11211"
USER="memcached"
MAXCONN="1024"
CACHESIZE="12288"
OPTIONS=""</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN Cat Error: "File Not Found". Gives Wrong Revision]]></title>
    <link href="http://dyurk.github.io/blog/2012/12/06/svn-cat-error-file-not-found-gives-wrong-revision/"/>
    <updated>2012-12-06T02:47:02-05:00</updated>
    <id>http://dyurk.github.io/blog/2012/12/06/svn-cat-error-file-not-found-gives-wrong-revision</id>
    <content type="html"><![CDATA[<p>You will need to use the peg revision</p>

<p>svn <em><code>command</code></em> -r <em><code>OPERATIVE-REV</code></em> item@<em><code>PEG-REV</code></em></p>

<p><a href="http://svnbook.red-bean.com/en/1.2/svn.advanced.pegrevs.html">http://svnbook.red-bean.com/en/1.2/svn.advanced.pegrevs.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JIRA V5 SVN Commit Tab Error. com.atlassian.jira.plugin.ext.subversion:subversion-commits-tabpanel']]></title>
    <link href="http://dyurk.github.io/blog/2012/11/19/jira-v5-svn-commit-tab-error-com-atlassian-jira-plugin-ext-subversionsubversion-commits-tabpanel/"/>
    <updated>2012-11-19T18:09:49-05:00</updated>
    <id>http://dyurk.github.io/blog/2012/11/19/jira-v5-svn-commit-tab-error-com-atlassian-jira-plugin-ext-subversionsubversion-commits-tabpanel</id>
    <content type="html"><![CDATA[<p>To fix this issue you will need to remove the <strong>atlassian-subversion-revisions </strong>folder which is located under the home directory of the JIRA user.</p>

<pre>$JIRA_HOME/caches/indexes/plugins/atlassian-subversion-revisions/</pre>


<p>Now restart JIRA, the subversion tab should now start displaying commits.</p>

<p>&nbsp;</p>

<h6>source: <a href="https://confluence.atlassian.com/display/JIRAKB/How+to+resolve+JIRA+Sub+Version+Plugin+Errors+after+an+upgrade">https://confluence.atlassian.com/display/JIRAKB/How+to+resolve+JIRA+Sub+Version+Plugin+Errors+after+an+upgrade</a></h6>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flush Memcached]]></title>
    <link href="http://dyurk.github.io/blog/2012/10/17/flush-memcached/"/>
    <updated>2012-10-17T22:50:28-04:00</updated>
    <id>http://dyurk.github.io/blog/2012/10/17/flush-memcached</id>
    <content type="html"><![CDATA[<pre>echo 'flush_all' | nc localhost 11211</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restored a Cleared Git Stash]]></title>
    <link href="http://dyurk.github.io/blog/2012/10/05/restored-a-cleared-git-stash/"/>
    <updated>2012-10-05T14:33:35-04:00</updated>
    <id>http://dyurk.github.io/blog/2012/10/05/restored-a-cleared-git-stash</id>
    <content type="html"><![CDATA[<p>Run the following:</p>

<pre>git fsck --lost-found</pre>


<p>You will get something similar to this:</p>

<pre>Checking objects: 100% (6596/6596), done.
dangling commit e3b3b973asdasdasdasdasd7cqweqwe35f6d34e</pre>


<p>Now just apply the stash&rsquo;s SHA1:</p>

<pre>git stash apply e3b3b973asdasdasdasdasd7cqweqwe35f6d34e</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Su Apache: "This Account Is Currently Not Available"]]></title>
    <link href="http://dyurk.github.io/blog/2012/09/11/this-account-is-currently-not-available/"/>
    <updated>2012-09-11T16:04:27-04:00</updated>
    <id>http://dyurk.github.io/blog/2012/09/11/this-account-is-currently-not-available</id>
    <content type="html"><![CDATA[<p>When trying to switch user to apache and you get the following: &#8221;This account is currently not available&#8221;. You need to set a shell for the apache user. Let&rsquo;s say we want to use bash.</p>

<pre># chsh -s /bin/bash apache

</pre>


<p>You should get this prompt:</p>

<pre>Changing shell for apache.
Shell changed.</pre>


<p>Done! Now you should be able to su as apache.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN Backup & Migration]]></title>
    <link href="http://dyurk.github.io/blog/2012/08/23/svn-backup-migration/"/>
    <updated>2012-08-23T16:00:34-04:00</updated>
    <id>http://dyurk.github.io/blog/2012/08/23/svn-backup-migration</id>
    <content type="html"><![CDATA[<h2>Backing Up</h2>


<p>Backing up the D87 repo:</p>

<pre># svnadmin dump /var/svn/repos/D87 &gt; D87_repo.svndump</pre>


<h2>Migrating a Repository</h2>


<p>First back up the Repo (See steps above). Now create the repo in the new location.</p>

<p>e.g. D87 repo:</p>

<pre># svnadmin create /var/svn/repos/D87</pre>


<p>Load the dump file created during the backup process</p>

<pre># svnadmin load /var/svn/repos/D87 &lt; D87_repo.svndump</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM: Find & Replace]]></title>
    <link href="http://dyurk.github.io/blog/2012/08/15/vim-find-replace/"/>
    <updated>2012-08-15T20:16:02-04:00</updated>
    <id>http://dyurk.github.io/blog/2012/08/15/vim-find-replace</id>
    <content type="html"><![CDATA[<p>Find &ldquo;foo&rdquo; and replace with &ldquo;hello&rdquo;</p>

<pre>:%s/foo/hello/g</pre>


<p>&nbsp;</p>

<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Examples of Lftp]]></title>
    <link href="http://dyurk.github.io/blog/2012/08/09/examples-of-lftp/"/>
    <updated>2012-08-09T13:14:25-04:00</updated>
    <id>http://dyurk.github.io/blog/2012/08/09/examples-of-lftp</id>
    <content type="html"><![CDATA[<p>In this example we are changing directory to &ldquo;output&rdquo; and doing a listing of files:</p>

<pre> lftp -e 'set net:timeout 10;cd output/;ls; bye' -u USER,PASSWORD ftp.foo.com/</pre>


<p>Here we are going to &ldquo;output&rdquo; and we transferring &#8221;myfile.txt&#8221; to our local /tmp directory.</p>

<pre>lftp -e 'set net:timeout 10;cd output/;get myfile.txt -o /tmp/; bye' -u USER,PASSWORD ftp.foo.com/</pre>

]]></content>
  </entry>
  
</feed>
